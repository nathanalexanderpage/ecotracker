# Generated by Django 2.2.1 on 2019-08-21 19:01

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('FuelTrackerApp', '0006_receipt_mi_since_last'),
    ]

    operations = [
        migrations.AlterField(
            model_name='fuelstation',
            name='address',
            field=models.CharField(help_text='Street address of the fuel station (number and street name portion)', max_length=80),
        ),
        migrations.AlterField(
            model_name='fuelstation',
            name='city',
            field=models.CharField(help_text='City in which the fuel station is located', max_length=50),
        ),
        migrations.AlterField(
            model_name='fuelstation',
            name='company',
            field=models.CharField(help_text='The company that owns the fuel station. ex: 7-Eleven, Shell, 79, Costco', max_length=50),
        ),
        migrations.AlterField(
            model_name='fuelstation',
            name='latitude',
            field=models.FloatField(blank=True, help_text='Latitude coordinate of the fuel station', null=True),
        ),
        migrations.AlterField(
            model_name='fuelstation',
            name='longitude',
            field=models.FloatField(blank=True, help_text='Longitude coordinate of the fuel station', null=True),
        ),
        migrations.AlterField(
            model_name='fuelstation',
            name='state_abbr',
            field=models.CharField(help_text="State's two-letter postal abbreviation. ex: NY, FL, ME, WA, CA", max_length=2, verbose_name='State (2-letter)'),
        ),
        migrations.AlterField(
            model_name='fuelstation',
            name='zip_code',
            field=models.IntegerField(help_text="Postal (zip) code portion of the fuel station's street address", max_length=5),
        ),
        migrations.AlterField(
            model_name='receipt',
            name='gallons',
            field=models.FloatField(help_text='The number of gallons purchased', validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='receipt',
            name='gas_station',
            field=models.ForeignKey(help_text='Fuel station at which the fill-up was made', on_delete=django.db.models.deletion.CASCADE, to='FuelTrackerApp.FuelStation', verbose_name='Fuel station'),
        ),
        migrations.AlterField(
            model_name='receipt',
            name='is_cash_purchase',
            field=models.BooleanField(help_text="'Yes' indicates cash payment; 'No' indicates card payment.", verbose_name='Cash purchase'),
        ),
        migrations.AlterField(
            model_name='receipt',
            name='mi_since_last',
            field=models.FloatField(help_text='The number of miles driven since last fill-up', verbose_name='Miles driven since last'),
        ),
        migrations.AlterField(
            model_name='receipt',
            name='note',
            field=models.CharField(blank=True, help_text='Optional small description accompanying the fill-up record', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='receipt',
            name='price_per_gal',
            field=models.FloatField(help_text='The price per gallon of fuel', validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(0.01)]),
        ),
        migrations.AlterField(
            model_name='receipt',
            name='receipt_datetime',
            field=models.DateTimeField(default=datetime.datetime.now, help_text='The date & time of the fill-up. Must format as: YYYY-MM-DD hh:mm:ss', verbose_name='Date & time'),
        ),
        migrations.AlterField(
            model_name='receipt',
            name='vehicle',
            field=models.ForeignKey(help_text='Vehicle which received the fill-up', on_delete=django.db.models.deletion.CASCADE, to='FuelTrackerApp.Vehicle'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='make',
            field=models.CharField(help_text='The manufacturer of the car. ex: Honda, Ford, Hyundai', max_length=40),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='model',
            field=models.CharField(help_text='The "type" of car. Name is given by the manufacturer. ex: (Honda) Civic, (Ford) F-150, (Hyundai) Elantra', max_length=40),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='nickname',
            field=models.CharField(blank=True, help_text='The name commonly used to refer to this vehicle (if applicable)', max_length=40, null=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='owner',
            field=models.ForeignKey(help_text='The user to which this vehicle belongs', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='year',
            field=models.IntegerField(default=1999, help_text="The year of manufacture. This information would be present in your owner's manual or printed somewhere on the vehicle (for many cars, on a sticker on the frame of the driver-side door)", validators=[django.core.validators.MaxValueValidator(2021), django.core.validators.MinValueValidator(1885)]),
        ),
    ]
